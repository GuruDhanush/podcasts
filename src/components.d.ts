/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  MatchResults,
} from '@stencil/router';

export namespace Components {
  interface AppHome {}
  interface AppPlaybar {
    'EpisodeTitle': string;
    'podcastThumbnail': string;
  }
  interface AppPlaycard {
    'created': Date;
    'episodeDescription': string;
    'episodeTitle': string;
    'playUrl': string;
    'podcastThumbnail': string;
    'podcastTitle': string;
  }
  interface AppPodcasthome {
    'match': MatchResults;
  }
  interface AppRoot {}
  interface AppShowcard {
    'created'?: Date;
    'podcastThumbnail': string;
    'podcastTitle': string;
    'publisher': string;
  }
  interface AppTabbar {
    'page': number;
    'tabLabels': string[];
  }
  interface PodcastPlayer {}
  interface ScrollInfinite {}
}

declare global {


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppPlaybarElement extends Components.AppPlaybar, HTMLStencilElement {}
  var HTMLAppPlaybarElement: {
    prototype: HTMLAppPlaybarElement;
    new (): HTMLAppPlaybarElement;
  };

  interface HTMLAppPlaycardElement extends Components.AppPlaycard, HTMLStencilElement {}
  var HTMLAppPlaycardElement: {
    prototype: HTMLAppPlaycardElement;
    new (): HTMLAppPlaycardElement;
  };

  interface HTMLAppPodcasthomeElement extends Components.AppPodcasthome, HTMLStencilElement {}
  var HTMLAppPodcasthomeElement: {
    prototype: HTMLAppPodcasthomeElement;
    new (): HTMLAppPodcasthomeElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppShowcardElement extends Components.AppShowcard, HTMLStencilElement {}
  var HTMLAppShowcardElement: {
    prototype: HTMLAppShowcardElement;
    new (): HTMLAppShowcardElement;
  };

  interface HTMLAppTabbarElement extends Components.AppTabbar, HTMLStencilElement {}
  var HTMLAppTabbarElement: {
    prototype: HTMLAppTabbarElement;
    new (): HTMLAppTabbarElement;
  };

  interface HTMLPodcastPlayerElement extends Components.PodcastPlayer, HTMLStencilElement {}
  var HTMLPodcastPlayerElement: {
    prototype: HTMLPodcastPlayerElement;
    new (): HTMLPodcastPlayerElement;
  };

  interface HTMLScrollInfiniteElement extends Components.ScrollInfinite, HTMLStencilElement {}
  var HTMLScrollInfiniteElement: {
    prototype: HTMLScrollInfiniteElement;
    new (): HTMLScrollInfiniteElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-playbar': HTMLAppPlaybarElement;
    'app-playcard': HTMLAppPlaycardElement;
    'app-podcasthome': HTMLAppPodcasthomeElement;
    'app-root': HTMLAppRootElement;
    'app-showcard': HTMLAppShowcardElement;
    'app-tabbar': HTMLAppTabbarElement;
    'podcast-player': HTMLPodcastPlayerElement;
    'scroll-infinite': HTMLScrollInfiniteElement;
  }
}

declare namespace LocalJSX {
  interface AppHome {}
  interface AppPlaybar {
    'EpisodeTitle'?: string;
    'podcastThumbnail'?: string;
  }
  interface AppPlaycard {
    'created'?: Date;
    'episodeDescription'?: string;
    'episodeTitle'?: string;
    'playUrl'?: string;
    'podcastThumbnail'?: string;
    'podcastTitle'?: string;
  }
  interface AppPodcasthome {
    'match'?: MatchResults;
  }
  interface AppRoot {}
  interface AppShowcard {
    'created'?: Date;
    'podcastThumbnail'?: string;
    'podcastTitle'?: string;
    'publisher'?: string;
  }
  interface AppTabbar {
    'onTabChanged'?: (event: CustomEvent<any>) => void;
    'page'?: number;
    'tabLabels'?: string[];
  }
  interface PodcastPlayer {}
  interface ScrollInfinite {}

  interface IntrinsicElements {
    'app-home': AppHome;
    'app-playbar': AppPlaybar;
    'app-playcard': AppPlaycard;
    'app-podcasthome': AppPodcasthome;
    'app-root': AppRoot;
    'app-showcard': AppShowcard;
    'app-tabbar': AppTabbar;
    'podcast-player': PodcastPlayer;
    'scroll-infinite': ScrollInfinite;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-home': LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
      'app-playbar': LocalJSX.AppPlaybar & JSXBase.HTMLAttributes<HTMLAppPlaybarElement>;
      'app-playcard': LocalJSX.AppPlaycard & JSXBase.HTMLAttributes<HTMLAppPlaycardElement>;
      'app-podcasthome': LocalJSX.AppPodcasthome & JSXBase.HTMLAttributes<HTMLAppPodcasthomeElement>;
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'app-showcard': LocalJSX.AppShowcard & JSXBase.HTMLAttributes<HTMLAppShowcardElement>;
      'app-tabbar': LocalJSX.AppTabbar & JSXBase.HTMLAttributes<HTMLAppTabbarElement>;
      'podcast-player': LocalJSX.PodcastPlayer & JSXBase.HTMLAttributes<HTMLPodcastPlayerElement>;
      'scroll-infinite': LocalJSX.ScrollInfinite & JSXBase.HTMLAttributes<HTMLScrollInfiniteElement>;
    }
  }
}


